name: Build container image and deploy on dockerhub
on:
  push:
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
  pull_request:

jobs:
  success:
    runs-on: ubuntu-24.04
    permissions:
      actions: write
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Fetch tags
        shell: bash
        run: git fetch --tags -f
      - name: Compute name
        env:
          SLUG: ${{ github.repository }}
        run: |
          IMAGE_NAME="$(echo $SLUG | tr '[:upper:]' '[:lower:]' | sed -e 's/docker-//')"
          echo IMAGE_NAME="$IMAGE_NAME"
          echo IMAGE_NAME="$IMAGE_NAME" >> $GITHUB_ENV
      - name: Build Image
        run: |
          echo docker build -t "$IMAGE_NAME:latest" .
          docker build -t "$IMAGE_NAME:latest" .
      - name: Trick Renovate
        id: trick
        shell: bash
        run: |
          # Idea: the regex matcher of Renovate keeps this string up to date automatically
          # The version is extracted and used to access the correct version of the scripts
          USES=$(cat <<TRICK_RENOVATE
          - uses: DanySK/Curriculum-Vitae@70eaf93ec88fe033d460e1d9b3d7bace1d13d0e2
          TRICK_RENOVATE
          )
          echo "Scripts update line: \"$USES\""
          echo "Computed version: \"${USES#*@}\""
          echo "::set-output name=version::${USES#*@}"
      - name: Copy test repository
        uses: actions/checkout@v4.2.1
        with:
          repository: DanySK/Curriculum-Vitae
          path: curriculum
          ref: ${{ steps.trick.outputs.version }}
      - name: Run test
        run: |
          docker run --rm --workdir="/curriculum" -v "$(pwd)/curriculum:/curriculum" "$IMAGE_NAME:latest" 'gem install --user-install bundler && bundle install && ./scholar_scraper.rb'
          [ -s curriculum/scholar.tex ]
      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Install Node
        uses: actions/setup-node@v4.0.4
        with:
          node-version-file: package.json
      - name: Create Release
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npx semantic-release --debug
